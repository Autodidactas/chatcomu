// Generated by CoffeeScript 1.3.3
(function() {
  var Schema, mongoose, user;

  mongoose = require('mongoose');

  Schema = mongoose.Schema;

  user = new Schema({
    username: String,
    location: String,
    provider: String,
    twitter: {
      id: Number,
      token: String,
      token_secret: String
    },
    facebook: {
      id: Number,
      token_secret: String
    },
    created_at: {
      type: Date,
      "default": Date.now
    }
  });

  user.statics.serialize = function(user, next) {
    return next(null, user._id);
  };

  user.statics.deserialize = function(id, next) {
    return this.findOne({
      _id: id
    }, function(err, user) {
      if (err || user === null) {
        return next(null, false);
      }
      return next(null, user);
    });
  };

  user.statics.twitter = function(token, tokenSecret, profile, next) {
    var model;
    model = this;
    return model.findOne({
      'twitter.id': profile.id
    }, function(err, doc) {
      var u;
      if (err) {
        return next(err);
      }
      if (doc) {
        doc.username = profile.username;
        doc.location = profile._json.location;
        return doc.save(function(err) {
          if (err) {
            throw err;
          }
          return next(null, doc);
        });
      } else {
        u = new (mongoose.model('user'));
        u.twitter.id = profile.id;
        u.twitter.token = token;
        u.twitter.token_secret = tokenSecret;
        u.username = u.username = profile.username;
        u.location = profile._json.location;
        u.provider = profile.provider;
        return u.save(function(err) {
          if (err) {
            throw err;
          }
          return next(null, u);
        });
      }
    });
  };

  user.statics.facebook = function(token, tokenSecret, profile, next) {
    var location, model;
    model = this;
    location = typeof profile._json.location !== 'undefined' ? profile._json.location.name : '';
    return model.findOne({
      'facebook.id': profile.id
    }, function(err, doc) {
      var u;
      if (err) {
        return next(err);
      }
      if (doc) {
        doc.facebook.username = profile.username;
        doc.location = location;
        return doc.save(function(err) {
          if (err) {
            throw err;
          }
          return next(null, doc);
        });
      } else {
        u = new (mongoose.model('user'));
        u.facebook.id = profile.id;
        u.facebook.token_secret = token;
        u.username = u.username = profile.username;
        u.location = location;
        u.provider = profile.provider;
        return u.save(function(err) {
          if (err) {
            throw err;
          }
          return next(null, u);
        });
      }
    });
  };

  module.exports = mongoose.model('user', user);

}).call(this);
